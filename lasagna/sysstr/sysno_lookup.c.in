/* sysno_lookup.c.in
** correlate errno with stringified errno
** (binary search implementation)
** wcm, 2008.01.21 - 2008.10.23
** ===
*/

#include <stdlib.h>

#include "sysstr_private.h"

/* search key comparison: */
#define int_compare(k1, k2) \
    (((k1)<(k2)) ? -1 : (((k1)==(k2)) ? 0 : 1))

/* proto sysno_lookup(): */
static const struct sysno_def *sysno_lookup
(
    const struct sysno_def *defs,
    int items,
    int n
);

static
const struct sysno_def *
sysno_lookup(const struct sysno_def *defs, int items, int n)
{
  int     key = n;
  size_t  low, high, mid;
  int     cmp;

  low = 0;
  high = items - 1;
  while(low <= high){
      mid = (low + high) >> 1;
      cmp = int_compare(key, defs[mid].n);
      if(cmp < 0)
          high = mid - 1;
      else if(cmp > 0)
          low = mid + 1;
      else
          return &defs[mid];
  }

  /* not found: */
  return NULL;
}


/* eof (sysno_lookup.c.in) */
